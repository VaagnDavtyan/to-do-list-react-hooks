{"ast":null,"code":"var _jsxFileName = \"/Users/vaagndavtyan/Desktop/todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodo() {\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toptodo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputField\",\n            ref: todoNameRef,\n            type: \"text\",\n            placeholder: \"Type Your Text...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddTodo,\n            children: \"Add Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clearbtn\",\n          onClick: handleClearTodo,\n          children: \"Clear Complited Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [todos.filter(todo => !todo.complete).length, \" left to do \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          className: \"todolist\",\n          todos: todos,\n          toggleTodo: toggleTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vaagndavtyan/Desktop/todo/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","v4","uuidv4","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","id","newTodos","todo","find","complete","handleAddTodo","e","name","current","value","prevTodos","handleClearTodo","filter","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport './App.css';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\n\n\nfunction App() {\nconst [todos, setTodos] = useState([])\nconst todoNameRef = useRef()\n\nuseEffect(() => {\n  const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n  if (storedTodos) setTodos(storedTodos)\n}, [])\n\nuseEffect(() => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n}, [todos])\n\n\nfunction toggleTodo(id) {\n  const newTodos = [...todos]\n  const todo = newTodos.find(todo => todo.id === id)\n  todo.complete = !todo.complete\n  setTodos(newTodos)\n}\n\n\nfunction handleAddTodo (e){\nconst name = todoNameRef.current.value\nif(name === '') return\nsetTodos(prevTodos => {\n  return [...prevTodos, {id: uuidv4(), name: name, complete: false}]\n})\ntodoNameRef.current.value = null\n}\n\nfunction handleClearTodo(){\n  const newTodos = todos.filter(todo => !todo.complete)\n  setTodos(newTodos)\n}\n\n\n\n\n  return (\n<>\n     <div className=\"container\">\n<div className=\"todo\">\n<div className=\"toptodo\">\n<input className=\"inputField\" ref={todoNameRef} type='text' placeholder='Type Your Text...'/>\n<button onClick={handleAddTodo}>Add Todo</button>\n</div>\n   <br/>\n   <button className='clearbtn'onClick={handleClearTodo}>Clear Complited Todo</button>\n   <div className=''>{todos.filter(todo => !todo.complete).length} left to do </div>\n   <TodoList className=\"todolist\" todos={todos} toggleTodo={toggleTodo}/>\n</div>\n</div>\n</>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}